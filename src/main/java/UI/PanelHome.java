/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import BL.Entities.Mensaje;
import BL.Entities.Oferta;
import BL.Entities.Persona;
import BL.Entities.Publicacion;
import BL.Entities.PublicationFilter;
import BL.Helpers.DatabaseService;
import BL.Helpers.EmailService;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.time.LocalDateTime;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Administrador
 */
public class PanelHome extends javax.swing.JPanel {

    private Persona persona;
    private JFrame frame;
    private DatabaseService db;
    File file;

    /**
     * Creates new form PanelLogin
     *
     * @param persona
     * @param frame
     * @param db
     */
    public PanelHome(Persona persona, JFrame frame, DatabaseService db) {
        this.persona = persona;
        this.frame = frame;
        this.db = db;
        initComponents();
        populateCategoryCombos();
        populatecomboMensajes();
        labelNombreDeUsuario.setText(persona.getNombre() + " " + persona.getApellido());
        saldo.setText("U$C " + persona.getSaldoUCUCoins());

        refreshPublicaciones();
        refreshOfertas();
        refreshExplorar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categoriesGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        myProductsTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPublicaciones = new javax.swing.JTable();
        btnBorrarPublicacion = new javax.swing.JButton();
        btnEditarPublicacion = new javax.swing.JButton();
        browseTab = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaExplorar = new javax.swing.JTable();
        btnAsk = new javax.swing.JButton();
        btnOffer = new javax.swing.JButton();
        txtValueFrom = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtValueTo = new javax.swing.JTextField();
        comboCategories1 = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        offersTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaOfertasRecibidas = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaOfertasEnviadas = new javax.swing.JTable();
        btnRemoveOffer = new javax.swing.JButton();
        btnAcceptOffer = new javax.swing.JButton();
        btnRejectOffer = new javax.swing.JButton();
        btnCounterOffer = new javax.swing.JButton();
        btnVerPublicacionesInv = new javax.swing.JButton();
        publishTab = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        listaCategorias = new javax.swing.JComboBox<>();
        nombreField = new javax.swing.JTextField();
        valorField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnPublish = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cantidadField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        descripcionField = new javax.swing.JTextArea();
        jToggleButton1 = new javax.swing.JToggleButton();
        labelMostrarImagen = new javax.swing.JLabel();
        labelNombreArchivo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        publicarMensajeError = new javax.swing.JLabel();
        messagesTab = new javax.swing.JPanel();
        btnReplyMessage = new javax.swing.JButton();
        comboMensajes = new javax.swing.JComboBox<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        tablaMensajes = new javax.swing.JTable();
        saldo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelNombreDeUsuario = new javax.swing.JLabel();
        btnEditarPerfil = new javax.swing.JButton();
        btnCerrarSesion1 = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(1000, 500));
        setPreferredSize(new java.awt.Dimension(1050, 550));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 255));
        jTabbedPane1.setForeground(new java.awt.Color(255, 114, 101));
        jTabbedPane1.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N

        tablaPublicaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaPublicaciones);

        btnBorrarPublicacion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBorrarPublicacion.setForeground(new java.awt.Color(255, 102, 102));
        btnBorrarPublicacion.setText("Borrar Publicacion");
        btnBorrarPublicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarPublicacionActionPerformed(evt);
            }
        });

        btnEditarPublicacion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditarPublicacion.setForeground(new java.awt.Color(0, 153, 51));
        btnEditarPublicacion.setText("Editar Publicacion");
        btnEditarPublicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarPublicacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout myProductsTabLayout = new javax.swing.GroupLayout(myProductsTab);
        myProductsTab.setLayout(myProductsTabLayout);
        myProductsTabLayout.setHorizontalGroup(
            myProductsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myProductsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 974, Short.MAX_VALUE))
            .addGroup(myProductsTabLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(btnBorrarPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditarPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        myProductsTabLayout.setVerticalGroup(
            myProductsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myProductsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(myProductsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBorrarPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditarPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mis productos", myProductsTab);

        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 102, 102));
        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tablaExplorar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaExplorar);

        btnAsk.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAsk.setForeground(new java.awt.Color(255, 102, 102));
        btnAsk.setText("Preguntar");
        btnAsk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAskActionPerformed(evt);
            }
        });

        btnOffer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnOffer.setForeground(new java.awt.Color(255, 102, 102));
        btnOffer.setText("Ofertar");
        btnOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOfferActionPerformed(evt);
            }
        });

        jLabel7.setText("Valor desde");

        jLabel8.setText("Categoria");
        jLabel8.setToolTipText("");

        jLabel10.setText("Valor hasta");

        comboCategories1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel16.setText("Buscar productos");

        javax.swing.GroupLayout browseTabLayout = new javax.swing.GroupLayout(browseTab);
        browseTab.setLayout(browseTabLayout);
        browseTabLayout.setHorizontalGroup(
            browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(browseTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, browseTabLayout.createSequentialGroup()
                        .addGroup(browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboCategories1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(browseTabLayout.createSequentialGroup()
                                .addGroup(browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtValueFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(txtValueTo))))
                        .addGap(18, 18, 18))
                    .addGroup(browseTabLayout.createSequentialGroup()
                        .addGroup(browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel16)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)))
                .addGroup(browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(browseTabLayout.createSequentialGroup()
                        .addComponent(btnOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAsk, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );
        browseTabLayout.setVerticalGroup(
            browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(browseTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(browseTabLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboCategories1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtValueFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtValueTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(browseTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAsk, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Explorar", browseTab);

        tablaOfertasRecibidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tablaOfertasRecibidas);

        jLabel11.setText("Enviadas");

        jLabel12.setText("Recibidas");

        tablaOfertasEnviadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tablaOfertasEnviadas);

        btnRemoveOffer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRemoveOffer.setForeground(new java.awt.Color(255, 102, 102));
        btnRemoveOffer.setText("Eliminar");

        btnAcceptOffer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAcceptOffer.setForeground(new java.awt.Color(255, 102, 102));
        btnAcceptOffer.setText("Aceptar");
        btnAcceptOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptOfferActionPerformed(evt);
            }
        });

        btnRejectOffer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRejectOffer.setForeground(new java.awt.Color(255, 102, 102));
        btnRejectOffer.setText("Rechazar");
        btnRejectOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectOfferActionPerformed(evt);
            }
        });

        btnCounterOffer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCounterOffer.setForeground(new java.awt.Color(255, 102, 102));
        btnCounterOffer.setText("Contraoferta");

        btnVerPublicacionesInv.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnVerPublicacionesInv.setForeground(new java.awt.Color(255, 102, 102));
        btnVerPublicacionesInv.setText("Ver publicaciones involucradas");
        btnVerPublicacionesInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerPublicacionesInvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout offersTabLayout = new javax.swing.GroupLayout(offersTab);
        offersTab.setLayout(offersTabLayout);
        offersTabLayout.setHorizontalGroup(
            offersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(offersTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(offersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(offersTabLayout.createSequentialGroup()
                        .addGroup(offersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(offersTabLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 749, Short.MAX_VALUE))
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(offersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoveOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(offersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnRejectOffer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                .addComponent(btnAcceptOffer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnCounterOffer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(offersTabLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(offersTabLayout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(btnVerPublicacionesInv, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        offersTabLayout.setVerticalGroup(
            offersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(offersTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(offersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoveOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(offersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(offersTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(offersTabLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnAcceptOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRejectOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCounterOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVerPublicacionesInv, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ofertas", offersTab);

        jLabel3.setText("Nombre");

        jLabel4.setText("Valor");

        jLabel5.setText("Categoria");

        listaCategorias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Imagen");

        btnPublish.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnPublish.setForeground(new java.awt.Color(0, 102, 0));
        btnPublish.setText("Publicar");
        btnPublish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPublishActionPerformed(evt);
            }
        });

        jLabel9.setText("Cantidad");

        cantidadField.setText("1");

        jLabel15.setText("Descripcion");

        descripcionField.setColumns(20);
        descripcionField.setRows(5);
        jScrollPane7.setViewportView(descripcionField);

        jToggleButton1.setText("Añadir imagen");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("U$C");

        publicarMensajeError.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        publicarMensajeError.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout publishTabLayout = new javax.swing.GroupLayout(publishTab);
        publishTab.setLayout(publishTabLayout);
        publishTabLayout.setHorizontalGroup(
            publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(publishTabLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, publishTabLayout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(29, 29, 29)
                            .addComponent(cantidadField))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, publishTabLayout.createSequentialGroup()
                            .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4))
                            .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(publishTabLayout.createSequentialGroup()
                                    .addGap(36, 36, 36)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(valorField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(publishTabLayout.createSequentialGroup()
                                    .addGap(24, 24, 24)
                                    .addComponent(listaCategorias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(btnPublish, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(publishTabLayout.createSequentialGroup()
                        .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(publishTabLayout.createSequentialGroup()
                                .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(publishTabLayout.createSequentialGroup()
                        .addComponent(jToggleButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelNombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelMostrarImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(publicarMensajeError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        publishTabLayout.setVerticalGroup(
            publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(publishTabLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(jToggleButton1))
                    .addGroup(publishTabLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(labelNombreArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(publishTabLayout.createSequentialGroup()
                        .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(valorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(listaCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cantidadField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(labelMostrarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(publishTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPublish, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(publicarMensajeError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Publicar", publishTab);

        btnReplyMessage.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReplyMessage.setForeground(new java.awt.Color(255, 102, 102));
        btnReplyMessage.setText("Responder");
        btnReplyMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplyMessageActionPerformed(evt);
            }
        });

        comboMensajes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        comboMensajes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboMensajesItemStateChanged(evt);
            }
        });

        jScrollPane8.setViewportView(tablaMensajes);

        javax.swing.GroupLayout messagesTabLayout = new javax.swing.GroupLayout(messagesTab);
        messagesTab.setLayout(messagesTabLayout);
        messagesTabLayout.setHorizontalGroup(
            messagesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagesTabLayout.createSequentialGroup()
                .addGroup(messagesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(messagesTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 847, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReplyMessage)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        messagesTabLayout.setVerticalGroup(
            messagesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagesTabLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(messagesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(messagesTabLayout.createSequentialGroup()
                        .addComponent(comboMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(275, 275, 275)
                        .addComponent(btnReplyMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Mensajes", messagesTab);

        add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 980, 430));

        saldo.setFont(new java.awt.Font("Yu Gothic", 1, 24)); // NOI18N
        saldo.setForeground(new java.awt.Color(255, 102, 102));
        saldo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        saldo.setText("$ ...");
        add(saldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 60, 170, 40));

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 0, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("UCUTRUEQUE");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 280, 43));

        labelNombreDeUsuario.setFont(new java.awt.Font("Dubai Medium", 0, 24)); // NOI18N
        labelNombreDeUsuario.setForeground(new java.awt.Color(0, 0, 204));
        labelNombreDeUsuario.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelNombreDeUsuario.setText("userName");
        add(labelNombreDeUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, 200, 30));

        btnEditarPerfil.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditarPerfil.setForeground(new java.awt.Color(0, 153, 0));
        btnEditarPerfil.setText("Editar Perfil");
        btnEditarPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarPerfilActionPerformed(evt);
            }
        });
        add(btnEditarPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, 124, 30));

        btnCerrarSesion1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCerrarSesion1.setForeground(new java.awt.Color(255, 102, 102));
        btnCerrarSesion1.setText("Cerrar sesion");
        btnCerrarSesion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesion1ActionPerformed(evt);
            }
        });
        add(btnCerrarSesion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 10, 124, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBorrarPublicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarPublicacionActionPerformed
        try {
            int id = (int) tablaPublicaciones.getValueAt(tablaPublicaciones.getSelectedRow(), 0);
            JDialog dialog = new JDialog(this.frame, true);
            PanelConfirmation panel = new PanelConfirmation(dialog);
            dialog.setSize(panel.getPreferredSize());
            dialog.setLocationRelativeTo(null);
            dialog.getContentPane().add(panel);
            panel.btnSi.addActionListener((java.awt.event.ActionEvent evt1) -> {
                if (this.db.connectToDB()) {
                    try {
                        this.db.deletePublicacion(id);
                        refreshPublicaciones();
                        refreshOfertas();
                        refreshExplorar();
                    } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                    }
                }
                db.closeConnectionDB();
                dialog.dispose();
            });

            panel.btnNo.addActionListener((java.awt.event.ActionEvent evt1) -> {
                this.db.closeConnectionDB();
                dialog.dispose();
            });

            dialog.setVisible(true);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        this.db.closeConnectionDB();

    }//GEN-LAST:event_btnBorrarPublicacionActionPerformed

    private void btnCerrarSesion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesion1ActionPerformed
        this.persona = null;
        PanelLogin panel = new PanelLogin(frame, db);
        frame.setSize(panel.getPreferredSize());
        frame.setLocationRelativeTo(null);
        frame.getContentPane().add(panel);
        frame.setVisible(true);
        this.frame.remove(this);
    }//GEN-LAST:event_btnCerrarSesion1ActionPerformed

    private void btnEditarPublicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarPublicacionActionPerformed
        try {
            if (this.db.connectToDB()) {
                int id = (int) tablaPublicaciones.getValueAt(tablaPublicaciones.getSelectedRow(), 0);
                Publicacion pub = this.db.getPublicacion(id);
                PanelEditPublication panel = new PanelEditPublication(this.frame, this.db, pub);
                JDialog dialog = new JDialog(this.frame, true);
                dialog.setSize(panel.getPreferredSize());
                dialog.setLocationRelativeTo(null);
                dialog.getContentPane().add(panel);
                dialog.addWindowListener(new WindowAdapter() {
                    @Override
                    public void windowClosing(WindowEvent e) {
                        try {
                            refreshPublicaciones();
                        } catch (Exception ex) {
                            System.out.println(ex.getMessage());
                        }
                        db.closeConnectionDB();
                    }
                });
                dialog.setVisible(true);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnEditarPublicacionActionPerformed

    private void refreshPublicaciones() {
        try {
            List<Publicacion> listaPublicaciones = this.db.getPublicaciones(this.persona);
            mostrarPublicacionesEnTabla(tablaPublicaciones, listaPublicaciones);
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    private void refreshOfertas() {
        try {
            List<Oferta> listaOfertasEnviadas = this.db.getOfertasEnviadas(this.persona);
            mostrarOfertasEnTabla(tablaOfertasEnviadas, listaOfertasEnviadas);

            List<Oferta> listaOfertasRecibidas = this.db.getOfertasRecibidas(this.persona);
            mostrarOfertasEnTabla(tablaOfertasRecibidas, listaOfertasRecibidas);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void refreshExplorar() {
        try {
            List<Publicacion> listaPublicaciones = this.db.getPublicaciones(new PublicationFilter(this.persona));
            mostrarPublicacionesEnTabla(tablaExplorar, listaPublicaciones);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void btnEditarPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarPerfilActionPerformed
        JFrame frameDialog = new JFrame();
        PanelEditUser panel = new PanelEditUser(frameDialog, this.db, this.persona);
        JDialog dialog = new JDialog(frameDialog, true);
        dialog.setSize(panel.getPreferredSize());
        dialog.setLocationRelativeTo(null);
        dialog.getContentPane().add(panel);

        dialog.setVisible(true);
    }//GEN-LAST:event_btnEditarPerfilActionPerformed

    // Methode to resize imageIcon with the same size of a Jlabel
    public ImageIcon ResizeImage(String ImagePath) {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(labelMostrarImagen.getWidth(), labelMostrarImagen.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }


    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        ImageIcon targetImg;
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "gif", "png");

        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setAcceptAllFileFilterUsed(false);

        int option = fileChooser.showOpenDialog(frame);
        if (option == JFileChooser.APPROVE_OPTION) {
            file = fileChooser.getSelectedFile();
            targetImg = ResizeImage(file.getPath());
            labelMostrarImagen.setIcon(targetImg);
            labelNombreArchivo.setText("Archivo elegido: " + file.getPath());
        } else {
            labelNombreArchivo.setText("Cancelado");
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (this.db.connectToDB()) {
            PublicationFilter filter = new PublicationFilter(this.persona);

            if (!txtSearch.getText().isEmpty()) {
                filter.setPattern(txtSearch.getText());
            }

            if (comboCategories1.getSelectedIndex() != 0) {
                filter.setCategory(comboCategories1.getSelectedIndex());
            }

            if (!txtValueFrom.getText().isEmpty()) {
                try {
                    filter.setMinValue(Integer.parseInt(txtValueFrom.getText()));
                } catch (NumberFormatException e) {
                }
            }

            if (!txtValueTo.getText().isEmpty()) {
                try {
                    filter.setMaxValue(Integer.parseInt(txtValueTo.getText()));
                } catch (NumberFormatException e) {
                }
            }

            try {
                List<Publicacion> publicaciones = db.getPublicaciones(filter);
                mostrarPublicacionesEnTabla(tablaExplorar, publicaciones);
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }

        this.db.closeConnectionDB();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnVerPublicacionesInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerPublicacionesInvActionPerformed

        // ACA TENEMOS QUE ABRIR UN POPUP QUE MUESTRE DE UN LADO LAS PUBLICACIONES QUE YO OFREZCO Y POR OTRO LADO LAS QUE ME OFRECEN        

    }//GEN-LAST:event_btnVerPublicacionesInvActionPerformed

    private void btnPublishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPublishActionPerformed
        String nombre = nombreField.getText();
        String descripcion = descripcionField.getText();
        String valor = "".equals(valorField.getText()) ? "0" : valorField.getText();
        int categoria = listaCategorias.getSelectedIndex();
        if (validarCamposInsertarPublicaciones()) {
            String cantidad = "".equals(cantidadField.getText()) ? "1" : cantidadField.getText();
            byte[] fileContent = null;
            if (this.file != null)
                try {
                fileContent = Files.readAllBytes(this.file.toPath());
            } catch (IOException ex) {
                Logger.getLogger(PanelHome.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println(String.format("%s,%s,%s,%s,%s", nombre, descripcion, valor, categoria, cantidad));
            LocalDateTime fechaHora = LocalDateTime.now();
            Publicacion p = new Publicacion(fechaHora, categoria, nombre, descripcion,
                    Integer.valueOf(valor), Integer.valueOf(cantidad), false,
                    fileContent == null ? "" : Base64.getEncoder().encodeToString(fileContent),
                    persona.getCi());
            try {
                this.db.connectToDB();
                this.db.addNewPublicacion(p);
                refreshPublicaciones();
                this.db.closeConnectionDB();

                JFrame frameDialog = new JFrame();
                PanelSucces panel = new PanelSucces(frameDialog, "Publicación realizada con éxito.");
                JDialog dialog = new JDialog(frameDialog, true);
                dialog.setSize(panel.getPreferredSize());
                dialog.setLocationRelativeTo(null);
                dialog.getContentPane().add(panel);
                dialog.setVisible(true);

            } catch (SQLException ex) {
                publicarMensajeError.setText(String.format("Error en la Base de Datos: %s", ex.getMessage()));

            }
            resetInsertarPublicaciones();
        }
    }//GEN-LAST:event_btnPublishActionPerformed

    private boolean validarCamposInsertarPublicaciones() {
        String nombre = nombreField.getText();
        String descripcion = descripcionField.getText();
        String valor = valorField.getText();
        try {
            Integer.parseInt(valor);
        } catch (NumberFormatException e) {
            publicarMensajeError.setText("El valor debe ser numerico");
            return false;
        }
        if (Integer.valueOf(valor) < 0) {
            publicarMensajeError.setText("El valor debe ser positivo");
            return false;
        }
        int categoria = listaCategorias.getSelectedIndex();
        if (nombre.isBlank() || descripcion.isBlank()) {
            publicarMensajeError.setText("Debes escribir nombre y descripcion.");
            return false;
        } else if (categoria == 0) {
            publicarMensajeError.setText("Debes elegir una categoría. ");
            return false;
        }
        return true;

    }
    private void btnOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOfferActionPerformed
        try {
            if (this.db.connectToDB()) {
                int id = (int) tablaExplorar.getValueAt(tablaExplorar.getSelectedRow(), 0);
                Publicacion pub = this.db.getPublicacion(id);
                PanelNewOffer panel = new PanelNewOffer(this.persona, pub, this.db, this.frame);
                JDialog dialog = new JDialog(this.frame, true);
                dialog.setSize(panel.getPreferredSize());
                dialog.setLocationRelativeTo(null);
                dialog.getContentPane().add(panel);
                panel.jCheckBox1.addItemListener((java.awt.event.ItemEvent evt1) -> {
                    refreshOfertas();
                    dialog.dispose();
                });
                dialog.setVisible(true);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        this.db.closeConnectionDB();
    }//GEN-LAST:event_btnOfferActionPerformed

    private void btnAskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAskActionPerformed
        JFrame frameDialog = new JFrame();
        int id = (int) tablaExplorar.getValueAt(tablaExplorar.getSelectedRow(), 0);
        Publicacion pub;
        try {
            this.db.connectToDB();
            pub = this.db.getPublicacion(id);
            Persona pRecibe = this.db.getPersona(pub.getPublicante());
            PanelSendMessage panel = new PanelSendMessage(frameDialog, this.db, this.persona, pRecibe, pub);
            JDialog dialog = new JDialog(frameDialog, true);
            dialog.setSize(panel.getPreferredSize());
            dialog.setLocationRelativeTo(null);
            dialog.getContentPane().add(panel);
            this.db.closeConnectionDB();
            dialog.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(PanelHome.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAskActionPerformed

    private void btnAcceptOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptOfferActionPerformed
        try {
            int id = (int) tablaOfertasRecibidas.getValueAt(tablaOfertasRecibidas.getSelectedRow(), 0);
            if (this.db.connectToDB()) {
                Oferta oferta = this.db.getOferta(id);
                Persona otraPersona = this.db.getPersona(oferta.getCIofertante());
                this.persona.setNombreDepartamento(this.db.getDepartmentName(this.persona.getDepartamento()));
                otraPersona.setNombreDepartamento(this.db.getDepartmentName(otraPersona.getDepartamento()));
                if (this.db.isPublicationFromThisPerson(oferta, otraPersona)) {
                    this.db.updateUcuCoinsWallet(otraPersona, otraPersona.getSaldoUCUCoins() + oferta.getUcucoinsOfrecidas());
                    this.persona.setSaldoUCUCoins(this.persona.getSaldoUCUCoins() - oferta.getUcucoinsOfrecidas());
                    this.db.updateUcuCoinsWallet(this.persona, this.persona.getSaldoUCUCoins());
                } else {
                    this.db.updateUcuCoinsWallet(otraPersona, otraPersona.getSaldoUCUCoins() - oferta.getUcucoinsOfrecidas());
                    this.persona.setSaldoUCUCoins(this.persona.getSaldoUCUCoins() + oferta.getUcucoinsOfrecidas());
                    this.db.updateUcuCoinsWallet(this.persona, this.persona.getSaldoUCUCoins());
                }

                saldo.setText("U$C " + this.persona.getSaldoUCUCoins());
                List<Publicacion> publicaciones = this.db.getPublicaciones(oferta);
                publicaciones.add(this.db.getPublicacion(oferta.getIdPublicacion()));
                this.db.aceptarOferta(oferta);
                EmailService.sendData(otraPersona, this.persona, publicaciones);

            }
            refreshExplorar();
            refreshPublicaciones();
            refreshOfertas();

            PanelOfferFeedback panel = new PanelOfferFeedback(true);
            JDialog dialog = new JDialog(this.frame, true);
            dialog.setSize(panel.getPreferredSize());
            dialog.setLocationRelativeTo(null);
            dialog.getContentPane().add(panel);
            dialog.setVisible(true);

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        this.db.closeConnectionDB();
    }//GEN-LAST:event_btnAcceptOfferActionPerformed

    private void btnRejectOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectOfferActionPerformed
        try {
            int id = (int) tablaOfertasRecibidas.getValueAt(tablaOfertasRecibidas.getSelectedRow(), 0);
            Oferta oferta = new Oferta(id);
            if (this.db.connectToDB()) {
                this.db.rechazarOferta(oferta);
            }

            refreshOfertas();

            PanelOfferFeedback panel = new PanelOfferFeedback(false);
            JDialog dialog = new JDialog(this.frame, true);
            dialog.setSize(panel.getPreferredSize());
            dialog.setLocationRelativeTo(null);
            dialog.getContentPane().add(panel);
            dialog.setVisible(true);

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        this.db.closeConnectionDB();

    }//GEN-LAST:event_btnRejectOfferActionPerformed

    private void comboMensajesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboMensajesItemStateChanged
        if (evt.getSource() == comboMensajes) {
            String userName = comboMensajes.getSelectedItem().toString();
            if (!userName.equals("Select")) {
                this.db.connectToDB();
                cargarMensajes(tablaMensajes, userName);
                this.db.closeConnectionDB();
            }
        }
    }//GEN-LAST:event_comboMensajesItemStateChanged

    private void btnReplyMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReplyMessageActionPerformed
        try {
            JFrame frameDialog = new JFrame();
            this.db.connectToDB();
            int id = (int) tablaMensajes.getValueAt(tablaMensajes.getSelectedRow(), 0);
            Publicacion pub = this.db.getPublicacion(id);

            Persona pRecibe = this.db.getPersona(comboMensajes.getItemAt(comboMensajes.getSelectedIndex()));
            PanelSendMessage panel = new PanelSendMessage(frameDialog, this.db, this.persona, pRecibe, pub);
            JDialog dialog = new JDialog(frameDialog, true);
            dialog.setSize(panel.getPreferredSize());
            dialog.setLocationRelativeTo(null);
            dialog.getContentPane().add(panel);
            this.db.closeConnectionDB();
            dialog.setVisible(true);

        } catch (SQLException ex) {
            Logger.getLogger(PanelHome.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnReplyMessageActionPerformed

    private void mostrarPublicacionesEnTabla(javax.swing.JTable table, List<Publicacion> listaPublicaciones) throws SQLException {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);

        if (listaPublicaciones.size() > 0) {
            DefaultTableModel tableModel = new DefaultTableModel() {
                @Override
                public Class<?> getColumnClass(int column) {
                    return switch (column) {
                        case 6 ->
                            ImageIcon.class;
                        default ->
                            Object.class;
                    };
                }
            };
            tableModel.addColumn("#");
            tableModel.addColumn("Cdad.");
            tableModel.addColumn("Categoria");
            tableModel.addColumn("Nombre");
            tableModel.addColumn("Descripción");
            tableModel.addColumn("U$C");
            tableModel.addColumn("");

            Object[] row = new Object[7];

            for (int i = 0; i < listaPublicaciones.size(); i++) {
                row[0] = listaPublicaciones.get(i).getId();
                row[1] = listaPublicaciones.get(i).getCantidad();
                row[2] = comboCategories1.getItemAt(listaPublicaciones.get(i).getCategoria());
                row[3] = listaPublicaciones.get(i).getNombreProducto();
                row[4] = listaPublicaciones.get(i).getDescripcion();
                row[5] = listaPublicaciones.get(i).getValorEstimado();

                String image = listaPublicaciones.get(i).getImagen();
                ImageIcon icon;
                if (image != null && !image.isEmpty()) {
                    byte[] decodedBytes = Base64.getDecoder().decode(image);
                    ByteArrayInputStream inputStream = new ByteArrayInputStream(decodedBytes);
                    BufferedImage bufImage;
                    try {
                        bufImage = ImageIO.read(inputStream);
                        Image img = bufImage.getScaledInstance(120, 100, Image.SCALE_SMOOTH);
                        icon = new ImageIcon(img);
                        row[6] = icon;
                    } catch (IOException ex) {
                        System.out.println(ex.getMessage());
                    }
                }
                tableModel.addRow(row);
            }
            table.setModel(tableModel);
            table.setRowHeight(100);
        }
    }

    private void mostrarOfertasEnTabla(javax.swing.JTable table, List<Oferta> listaOfertas) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);

        if (listaOfertas.size() > 0) {
            DefaultTableModel tableModel = new DefaultTableModel();
            tableModel.addColumn("#");
            tableModel.addColumn("Nombre");
            tableModel.addColumn("U$C ofrecido");

            Object[] row = new Object[3];

            for (int i = 0; i < listaOfertas.size(); i++) {
                row[0] = listaOfertas.get(i).getIdOferta();
                row[1] = listaOfertas.get(i).getNombreProducto();
                row[2] = listaOfertas.get(i).getUcucoinsOfrecidas();
                tableModel.addRow(row);
            }
            table.setModel(tableModel);
        }
    }

    private void populateCategoryCombos() {
        try {
            String[] categories = db.getCategories();
            comboCategories1.removeAllItems();
            listaCategorias.removeAllItems();
            comboCategories1.addItem("Select");
            listaCategorias.addItem("Select");
            for (String category : categories) {
                comboCategories1.addItem(category);
                listaCategorias.addItem(category);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelEditPublication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void populatecomboMensajes() {
        try {
            String[] ciMensajesRecibidos = db.getCiMensajesRecibidos(this.persona);
            String[] users = db.getUserNamesMensajesRecibidos(ciMensajesRecibidos);
            comboMensajes.removeAllItems();
            comboMensajes.addItem("Select");
            for (String user : users) {
                comboMensajes.addItem(user);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelEditPublication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel browseTab;
    private javax.swing.JButton btnAcceptOffer;
    private javax.swing.JButton btnAsk;
    private javax.swing.JButton btnBorrarPublicacion;
    private javax.swing.JButton btnCerrarSesion1;
    private javax.swing.JButton btnCounterOffer;
    private javax.swing.JButton btnEditarPerfil;
    private javax.swing.JButton btnEditarPublicacion;
    private javax.swing.JButton btnOffer;
    private javax.swing.JButton btnPublish;
    private javax.swing.JButton btnRejectOffer;
    private javax.swing.JButton btnRemoveOffer;
    private javax.swing.JButton btnReplyMessage;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnVerPublicacionesInv;
    private javax.swing.JTextField cantidadField;
    private javax.swing.ButtonGroup categoriesGroup;
    private javax.swing.JComboBox<String> comboCategories1;
    private javax.swing.JComboBox<String> comboMensajes;
    private javax.swing.JTextArea descripcionField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel labelMostrarImagen;
    private javax.swing.JLabel labelNombreArchivo;
    private javax.swing.JLabel labelNombreDeUsuario;
    private javax.swing.JComboBox<String> listaCategorias;
    private javax.swing.JPanel messagesTab;
    private javax.swing.JPanel myProductsTab;
    private javax.swing.JTextField nombreField;
    private javax.swing.JPanel offersTab;
    private javax.swing.JLabel publicarMensajeError;
    private javax.swing.JPanel publishTab;
    private javax.swing.JLabel saldo;
    private javax.swing.JTable tablaExplorar;
    private javax.swing.JTable tablaMensajes;
    private javax.swing.JTable tablaOfertasEnviadas;
    private javax.swing.JTable tablaOfertasRecibidas;
    private javax.swing.JTable tablaPublicaciones;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtValueFrom;
    private javax.swing.JTextField txtValueTo;
    private javax.swing.JTextField valorField;
    // End of variables declaration//GEN-END:variables

    private void resetInsertarPublicaciones() {
        nombreField.setText("");
        descripcionField.setText("");
        valorField.setText("");
        listaCategorias.setSelectedIndex(0);
        cantidadField.setText("");
        this.file = null;
        labelMostrarImagen.setIcon(null);
        labelNombreArchivo.setText("");
    }

    private void cargarMensajes(JTable mensajesTable, String userName) {
        try {
            Persona p = this.db.getPersona(userName);
            List<Mensaje> mensajes = this.db.getMensajes(p, this.persona);

            DefaultTableModel tableModel = new DefaultTableModel();
            tableModel.addColumn("N° publicacion");
            tableModel.addColumn("Recibidos");
            tableModel.addColumn("Fecha Hora");
            tableModel.addColumn("Enviados");
            tableModel.addColumn("Fecha Hora");

            for (int i = 0; i < mensajes.size(); i++) {
                Object[] row = new Object[5];
                row[0] = mensajes.get(i).getIdPublicacion();
                if (mensajes.get(i).getCIorigen() == p.getCi()) {
                    row[1] = mensajes.get(i).getContenido();
                    LocalDateTime fhm = mensajes.get(i).getFechaHora();
                    String fechaHora = String.format("%s/%s/%s %s:%s", fhm.getDayOfMonth(), fhm.getMonthValue(), fhm.getYear(), fhm.getHour(), fhm.getMinute());
                    row[2] = fechaHora;
                } else if (mensajes.get(i).getCIorigen() == this.persona.getCi()) {
                    row[3] = mensajes.get(i).getContenido();
                    LocalDateTime fhm = mensajes.get(i).getFechaHora();
                    String fechaHora = String.format("%s/%s/%s %s:%s", fhm.getDayOfMonth(), fhm.getMonthValue(), fhm.getYear(), fhm.getHour(), fhm.getMinute());
                    row[4] = fechaHora;
                }
                tableModel.addRow(row);

            }
            mensajesTable.setRowHeight(100);
            mensajesTable.setModel(tableModel);

        } catch (SQLException ex) {
            Logger.getLogger(PanelHome.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
