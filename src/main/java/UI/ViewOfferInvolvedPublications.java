/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import BL.Entities.Oferta;
import BL.Entities.Persona;
import BL.Entities.Publicacion;
import BL.Helpers.DatabaseService;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrador
 */
public class ViewOfferInvolvedPublications extends javax.swing.JPanel {

    /**
     * Creates new form ViewOfferInvolvedPublications
     * @param db
     */
    public ViewOfferInvolvedPublications(DatabaseService db, Oferta oferta, Persona persona) {
        initComponents();
        
        try {
            List<Publicacion> listaPublicaciones = db.getPublicaciones(oferta);
            Publicacion publicacion = db.getPublicacion(oferta.getIdPublicacion());
            List<Publicacion> listaPublicaciones2 = new ArrayList<>();
            listaPublicaciones2.add(publicacion);
            
            if (publicacion.getPublicante() == persona.getCi()) {
                mostrarPublicacionesEnTabla(jTable1, listaPublicaciones2);
                mostrarPublicacionesEnTabla(jTable2, listaPublicaciones);
            } else {
                mostrarPublicacionesEnTabla(jTable1, listaPublicaciones);
                mostrarPublicacionesEnTabla(jTable2, listaPublicaciones2);
            }
            
            jLabel5.setText(String.valueOf(oferta.getUcucoinsOfrecidas()));
            
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    private void mostrarPublicacionesEnTabla(javax.swing.JTable table, List<Publicacion> listaPublicaciones) throws SQLException {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        
        DefaultTableModel tableModel = new DefaultTableModel() {
                @Override
                public Class<?> getColumnClass(int column) {
                    return switch (column) {
                        case 4 -> ImageIcon.class;
                        default -> Object.class;
                    };
                }
            };
        tableModel.addColumn("Cdad.");
        tableModel.addColumn("Nombre");
        tableModel.addColumn("DescripciÃ³n");
        tableModel.addColumn("U$C");
        tableModel.addColumn("");
        
        if (listaPublicaciones != null && listaPublicaciones.size() > 0) {
            Object[] row = new Object[5];

            for (int i = 0; i < listaPublicaciones.size(); i++) {
                row[0] = listaPublicaciones.get(i).getCantidad();
                row[1] = listaPublicaciones.get(i).getNombreProducto();
                row[2] = listaPublicaciones.get(i).getDescripcion();
                row[3] = listaPublicaciones.get(i).getValorEstimado();
                
                String image = listaPublicaciones.get(i).getImagen();
                ImageIcon icon;
                if (!image.isEmpty()) {
                    byte[] decodedBytes = Base64.getDecoder().decode(image);
                    ByteArrayInputStream inputStream = new ByteArrayInputStream(decodedBytes);                         
                    BufferedImage bufImage;
                    try {
                        bufImage = ImageIO.read(inputStream);
                        Image img = bufImage.getScaledInstance(120, 100, Image.SCALE_SMOOTH);
                        icon = new ImageIcon(img);
                        row[4] = icon;
                    } catch (IOException ex) {
                        System.out.println(ex.getMessage());
                    }
                }
                
                tableModel.addRow(row);
            }
        }
        
        table.setModel(tableModel);
        table.setRowHeight(100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setText("Mis publicaciones");

        jLabel2.setText("Sus publicaciones");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Detalles de la oferta");

        jLabel4.setText("UCUcoins ofrecidas: ");

        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
